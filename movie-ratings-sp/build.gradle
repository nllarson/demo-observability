buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath 'gradle.plugin.com.github.jengelman.gradle.plugins:shadow:7.0.0'
  }
}

plugins {
  id 'java'
  id "com.github.davidmc24.gradle.plugin.avro" version "1.7.0"
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17
version = '0.0.1'

repositories {
  mavenCentral()

  maven {
    url 'https://packages.confluent.io/maven'
  }
}

apply plugin: 'com.github.johnrengelman.shadow'

dependencies {
  implementation 'org.apache.avro:avro:1.11.1'
  implementation 'org.slf4j:slf4j-simple:2.0.7'
  implementation 'org.apache.kafka:kafka-streams:3.4.0'
    implementation ('org.apache.kafka:kafka-clients') {
       version {
           strictly '3.4.0'
        }
      }
  implementation 'io.confluent:kafka-streams-avro-serde:7.3.0'

  implementation 'io.opentelemetry.contrib:opentelemetry-kafka-exporter:1.33.0-alpha'
  implementation 'io.opentracing.contrib:opentracing-kafka-client:0.1.15'
  implementation 'io.opentelemetry:opentelemetry-api:1.34.1'

  testImplementation 'org.apache.kafka:kafka-streams-test-utils:3.4.0'
  testImplementation 'junit:junit:4.13.2'
}

test {
  testLogging {
    outputs.upToDateWhen { false }
    showStandardStreams = true
    exceptionFormat = 'full'
  }
}

task run(type: JavaExec) {
  mainClass = 'com.improving.demo.StreamProcessor'
  classpath = sourceSets.main.runtimeClasspath
  args = ['configuration/dev.properties']
}

jar {
  manifest {
    attributes(
        'Class-Path': configurations.compileClasspath.collect { it.getName() }.join(' '),
        'Main-Class': 'com.improving.demo.StreamProcessor'
    )
  }
}

shadowJar {
  archiveBaseName = "movie-ratings-sp-all"
  archiveClassifier = ''
}